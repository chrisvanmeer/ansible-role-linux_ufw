---

# checking if ssh port is/will be opened

- name: UFW | SSH-Rule | Setting defaults
  ansible.builtin.set_fact:
    add_ssh_rule: true
    ssh_port: "{{ ansible_port | default('22') }}"

- name: UFW | SSH-Rule | Checking configured ssh port
  ansible.builtin.shell: |
    set -o pipefail
    cat /etc/ssh/sshd_config | grep -e '^Port' | cut -d' ' -f2
  args:
    executable: '/bin/bash'
  register: configured_ssh_port
  changed_when: false
  check_mode: false

- name: UFW | SSH-Rule | Setting configured default port
  ansible.builtin.set_fact:
    configured_ssh_port:
      stdout: '22'
  when: not configured_ssh_port.stdout

- name: UFW | SSH-Rule | Configured ssh port does not match current one
  ansible.builtin.pause:
    prompt: |
      The configured ssh port '{{ configured_ssh_port.stdout }}' does not match the current ansible_port '{{ ssh_port }}'
      Do you want to allow the connection for both ports? (YES/no)
  register: ssh_rule_both_ports
  when: configured_ssh_port.stdout != ssh_port

- name: UFW | SSH-Rule | Updating ssh port(s)
  ansible.builtin.set_fact:
    ssh_port: "{{ ssh_port }},{{ configured_ssh_port.stdout }}"
  when:
    - ssh_rule_both_ports.user_input is defined
    - ssh_rule_both_ports.user_input in ['y', 'yes', 'Y', 'YES']

- name: UFW | SSH-Rule | Checking if ssh port will be open
  ansible.builtin.set_fact:
    add_ssh_rule: false
  when:
    - item.value.port is defined
    - item.value.port|int == ssh_port|int
    - item.value.proto is undefined or item.value.proto == 'tcp'
    - item.value.rule is undefined or (item.value.rule == 'allow' or item.value.rule == 'limit')
    - item.value.direction is undefined or item.value.direction == 'in'
  no_log: true  # cleaner output
  with_dict: "{{ ufw_rules }}"

- name: UFW | SSH-Rule | Adding ssh rule
  ansible.builtin.include_tasks: rule/main.yml
  vars:
    rule:
      key: 'default_ssh'
      value:
        proto: 'tcp'
        port: "{{ ssh_port }}"
        rule: 'limit'  # ddos prevention
        log: true
    delete_rule: false
  no_log: true
  when: add_ssh_rule
