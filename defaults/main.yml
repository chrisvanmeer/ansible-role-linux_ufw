---

# todo: refactor to use single dict

# empty configs as fallback
ufw_global_rules: {}
ufw_group_rules: {}
ufw_host_rules: {}

# main switches
configure_ufw_basics: true
configure_ufw_ssh_rule: true  # will check if ssh will be allowed by a rule => else it will add an anti-lockout rule

# run-mode
#   STATELESS RUN
#     if set to true:
#       all existing rules will be deleted before the new ones get applied
#       every run must apply ALL needed ufw rules
# ufw_reset_rules: true
# ufw_stateless: false

#   STATEFUL RUN
#     if set to false:
#       existing rules will persist
#       the variable 'state' (present/absent) will be check per rule to decide if a rule should be created or deleted
# ufw_reset_rules: false
ufw_stateful: false  # stateful is currently a bit buggy..

# main ufw config
#   can be overwritten via 'ufw_config' dictionary-variable
defaults_ufw:
  logging: 'low'  # off/low/medium/high/full
  ipv6: 'no'
  policy_input: 'DROP'
  policy_output: 'ACCEPT'
  policy_forward: 'DROP'
  policy_application: 'SKIP'

# you shouldn't have a need to change these rule-defaults
defaults_rule:
  rule: 'allow'
  proto: 'any'
  log: 'no'
  from_ip: 'any'
  to_ip: 'any'
  comment: 'Ansible managed - '
  direction: 'in'
